// <auto-generated />
using System;
using FirstAPI.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FirstAPI.Migrations
{
    [DbContext(typeof(EmployeeManagementContext))]
    partial class EmployeeManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FirstAPI.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Department_Id");

                    b.HasIndex("Status");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            Name = "HR",
                            Status = 1
                        },
                        new
                        {
                            Id = 102,
                            Name = "Admin",
                            Status = 2
                        });
                });

            modelBuilder.Entity("FirstAPI.Models.DepartmnetStatusMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DepartmnetStatusMasters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Status = "In-Operation"
                        },
                        new
                        {
                            Id = 2,
                            Status = "Deffered"
                        });
                });

            modelBuilder.Entity("FirstAPI.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Employee_Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Status");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(2000, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 101,
                            Email = "ramu@dubakkur.com",
                            Image = "",
                            Name = "Ramu",
                            PhoneNumber = "9876543210",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(2005, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 101,
                            Email = "somu@dubakkur.com",
                            Image = "",
                            Name = "Somu",
                            PhoneNumber = "4321098765",
                            Status = 1
                        });
                });

            modelBuilder.Entity("FirstAPI.Models.EmployeeSalary", b =>
                {
                    b.Property<int>("SNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SNo"));

                    b.Property<DateTime>("CreditedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<float>("OtherCredits")
                        .HasColumnType("real");

                    b.Property<float>("OtherDeductions")
                        .HasColumnType("real");

                    b.Property<int>("SalaryId")
                        .HasColumnType("int");

                    b.HasKey("SNo")
                        .HasName("PK_EMployeeSalary_ID");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SalaryId");

                    b.ToTable("EmployeeSalaries");
                });

            modelBuilder.Entity("FirstAPI.Models.EmployeeStatusMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmployeeStatusMaster");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Status = "Active"
                        },
                        new
                        {
                            Id = 2,
                            Status = "InActive"
                        });
                });

            modelBuilder.Entity("FirstAPI.Models.Salary", b =>
                {
                    b.Property<int>("SerialNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SerialNumber"));

                    b.Property<float>("Basic")
                        .HasColumnType("real");

                    b.Property<float>("DA")
                        .HasColumnType("real");

                    b.Property<float>("Deduction")
                        .HasColumnType("real");

                    b.Property<float>("HRA")
                        .HasColumnType("real");

                    b.HasKey("SerialNumber")
                        .HasName("PK_Salary");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("FirstAPI.Models.Department", b =>
                {
                    b.HasOne("FirstAPI.Models.DepartmnetStatusMaster", "DepartmnetStatus")
                        .WithMany("Departments")
                        .HasForeignKey("Status")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Department_Status");

                    b.Navigation("DepartmnetStatus");
                });

            modelBuilder.Entity("FirstAPI.Models.Employee", b =>
                {
                    b.HasOne("FirstAPI.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Depatment_Employee");

                    b.HasOne("FirstAPI.Models.EmployeeStatusMaster", "EmployeeStatus")
                        .WithMany("Employees")
                        .HasForeignKey("Status")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Employee_Status");

                    b.Navigation("Department");

                    b.Navigation("EmployeeStatus");
                });

            modelBuilder.Entity("FirstAPI.Models.EmployeeSalary", b =>
                {
                    b.HasOne("FirstAPI.Models.Employee", "Employee")
                        .WithMany("Salaries")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_EmployeeSalary_Employee");

                    b.HasOne("FirstAPI.Models.Salary", "Salary")
                        .WithMany("EmployeeSalaries")
                        .HasForeignKey("SalaryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_EmployeeSalary_Salary");

                    b.Navigation("Employee");

                    b.Navigation("Salary");
                });

            modelBuilder.Entity("FirstAPI.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("FirstAPI.Models.DepartmnetStatusMaster", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("FirstAPI.Models.Employee", b =>
                {
                    b.Navigation("Salaries");
                });

            modelBuilder.Entity("FirstAPI.Models.EmployeeStatusMaster", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("FirstAPI.Models.Salary", b =>
                {
                    b.Navigation("EmployeeSalaries");
                });
#pragma warning restore 612, 618
        }
    }
}
